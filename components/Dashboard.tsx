
import React from 'react';
import { PlayerProfile, Habit, Monster } from '../types';
import HabitList from './dashboard/HabitList';
import StatsPanel from './dashboard/StatsPanel';
import HabitGenerator from './dashboard/HabitGenerator';
import Calendar from './dashboard/Calendar';
import Button from './PixelButton';
import { Card, CardContent, CardHeader, CardTitle } from './Card';

interface DashboardProps {
  playerProfile: PlayerProfile;
  habits: Habit[];
  monsters: Monster[];
  onUpdateHabit: (habitId: string, updates: Partial<Habit>) => void;
  onAddNewHabits: (habits: Omit<Habit, 'id' | 'user_id' | 'status' | 'created_at'>[]) => void;
  onNavigateToAccount: () => void;
  onNavigateToDungeon: () => void;
}

const UpgradePrompt: React.FC<{onUpgradeClick: () => void}> = ({onUpgradeClick}) => (
    <Card className="bg-primary/10 border-primary/20">
        <CardHeader>
            <CardTitle className="text-2xl text-primary">Unlock the AI Quest Forge</CardTitle>
        </CardHeader>
        <CardContent>
            <p className="text-muted-foreground mb-4">Upgrade to Vitamancer Pro to get unlimited, personalized quests generated by our powerful AI. Let the Quest Master guide your journey!</p>
            <Button onClick={onUpgradeClick}>Upgrade to Pro</Button>
        </CardContent>
    </Card>
);

const DungeonAlert: React.FC<{monsterCount: number, onEnterClick: () => void}> = ({monsterCount, onEnterClick}) => (
    <Card className="bg-destructive/10 border-destructive/20 animate-pulse">
        <CardHeader>
            <CardTitle className="text-2xl text-destructive">Monsters in the Dungeon!</CardTitle>
        </CardHeader>
        <CardContent>
            <p className="text-muted-foreground mb-4">{monsterCount} of your failed quests from yesterday have turned into monsters. Defeat them to reclaim your honor (and get bonus loot)!</p>
            <Button onClick={onEnterClick} variant="destructive">Enter the Dungeon</Button>
        </CardContent>
    </Card>
)

const Dashboard: React.FC<DashboardProps> = ({ playerProfile, habits, monsters, onUpdateHabit, onAddNewHabits, onNavigateToAccount, onNavigateToDungeon }) => {
  return (
    <main className="container mx-auto p-4 grid grid-cols-1 lg:grid-cols-12 gap-6">
      <div className="lg:col-span-8 space-y-6">
        {monsters.length > 0 && <DungeonAlert monsterCount={monsters.length} onEnterClick={onNavigateToDungeon} />}
        <HabitList habits={habits} onUpdateHabit={onUpdateHabit} />
        {playerProfile.subscription_tier === 'pro' ? (
            <HabitGenerator onAddHabits={onAddNewHabits} />
        ) : (
            <UpgradePrompt onUpgradeClick={onNavigateToAccount} />
        )}
      </div>
      <aside className="lg:col-span-4 space-y-6">
        <StatsPanel playerProfile={playerProfile} />
        <Calendar habits={habits} />
      </aside>
    </main>
  );
};

export default Dashboard;